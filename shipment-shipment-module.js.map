{"version":3,"sources":["./src/app/modules/shipment/shipment-routing.module.ts","./src/app/modules/shipment/shipment.module.ts","./src/app/modules/shipment/info/info.component.ts","./src/app/modules/shipment/info/info.component.html","./src/app/modules/shipment/shipments/shipments.component.ts","./src/app/modules/shipment/shipments/shipments.component.html","./src/app/modules/shipment/shipment.component.ts","./src/app/modules/shipment/shipment.component.html","./src/app/modules/shipment/createshipments/createshipments.component.ts","./src/app/modules/shipment/createshipments/createshipments.component.html"],"names":[],"mappings":"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","file":"shipment-shipment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShipmentsComponent } from './shipments/shipments.component';\nimport { CreateshipmentsComponent } from './createshipments/createshipments.component';\nimport { InfoComponent as ShipmentInfoComponent } from './info/info.component';\n\n\n\nconst routes: Routes = [\n  {\n    path : '',\n    redirectTo : 'list' , pathMatch: 'full'\n  },\n{\n  path : 'list',\n  component:ShipmentsComponent,\n},\n{\n  path : ':id',\n  component:CreateshipmentsComponent,\n},\n{\n  path : 'add',\n  component:CreateshipmentsComponent,\n},\n{\n  path : 'info/:id',\n  component:ShipmentInfoComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShipmentRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShipmentRoutingModule } from './shipment-routing.module';\nimport { CreateshipmentsComponent } from './createshipments/createshipments.component';\nimport { ShipmentComponent } from './shipment.component';\nimport { ShipmentsComponent } from './shipments/shipments.component';\nimport { InfoComponent as ShipmentInfoComponent } from './info/info.component';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { AngularFileUploaderModule } from 'angular-file-uploader';\nimport { SharedModule } from '../../shared/shared.module';\nimport { MaterialModule } from '../../shared/material/material.module';\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\nimport { SkeletonLoaderModule } from '../../shared/utils/skeleton-loader/skeleton-loader.module';\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox';\nimport { GallerizeModule } from '@ngx-gallery/gallerize';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DpDatePickerModule } from 'ng2-date-picker';\nimport { CommonpipesModule } from '../commonpipes/commonpipes.module';\n\n@NgModule({\n  declarations: [CreateshipmentsComponent , ShipmentComponent , ShipmentsComponent , ShipmentInfoComponent],\n  imports: [\n    NgxMaterialTimepickerModule,\n    CommonModule,\n    ShipmentRoutingModule,\n    CommonpipesModule,\n    AngularFileUploaderModule,\n    SharedModule,\n    MaterialModule,\n    ImageViewerModule,\n    SkeletonLoaderModule,\n    GalleryModule,\n    LightboxModule,\n    GallerizeModule,\n    FormsModule,\n    CommonpipesModule,\n    DpDatePickerModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ShipmentModule { }\n","import { Component, OnInit, ElementRef, ViewChild, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ManagerService } from '../../../shared/services/manager.service';\nimport { ShipmentService } from '../../../shared/services/shipment.service';\nimport * as moment from 'moment';\n\nimport { ExportAsService, ExportAsConfig } from 'ngx-export-as';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\nimport { ImageComponent } from '../../../shared/modal/image/image.component';\n\nimport { Gallery, GalleryItem, ImageItem, ThumbnailsPosition, ImageSize } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\nimport { FilemanagerComponent } from '../../../shared/modal/filemanager/filemanager.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n\n  @ViewChild('content', { read: ElementRef }) content:ElementRef;\n\n  @ViewChild('itemTemplate') itemTemplate: TemplateRef<any>;\n\n  gallery_items: GalleryItem[];\n\n  lightboxRef = null;\n\n  exportAsConfig:ExportAsConfig = {\n    type: 'pdf',\n    elementIdOrContent: 'content'\n  };\n\n  shipmentHistory = [];\n  editMode = false;\n  submitted = false;\n  shipmentId: number;\n  info:any = {};\n  shipperType = '';\n  shipper_types = [];\n  destinations_list = [];\n  containerType : '';\n  private sub: any;\n  permission:any = {};\n\n  constructor(private exportAsService: ExportAsService,private router: Router,public dialog: MatDialog,private route: ActivatedRoute , private _manager:ManagerService , private _shipmentService:ShipmentService, private auth:AuthenticationService,public gallery: Gallery, public lightbox: Lightbox) {\n    if(auth.currentUserValue.permission){\n      this.permission = auth.currentUserValue.permission.shipment;\n    }\n  }\n\n  ngOnInit(): void {\n    this.info = {\n      shipper : {\n        shipper_id : '',\n        name : '',\n        email : '',\n        phone : '',\n        address : '',\n        ein : '',\n        shipper_type_id : '',\n      },\n      receiver : {\n        receiver_id : '',\n        name : '',\n        email : '',\n        phone : '',\n        address : ''\n      },\n      other : {\n        date : '',\n        container_type_id : '',\n        title : '',\n        akey : '',\n        destination_name : '',\n        destination_id : '',\n        warehouse_name : ''\n      },\n      history : [],\n      packages : []\n    };\n\n    this.lightboxRef = this.gallery.ref('lightbox');\n\n    this.lightboxRef.setConfig({\n      imageSize: ImageSize.Contain,\n      thumbPosition: ThumbnailsPosition.Top,\n      itemTemplate: this.itemTemplate,\n      gestures: false\n    });\n\n    this.sub = this.route.params.subscribe(params => {\n      this.shipmentId = +params['id'];\n      if(!isNaN(this.shipmentId)){\n        this.editMode =true;\n        this.getShipment(this.shipmentId);\n      } else {\n        this.editMode =false;\n        this.shipmentHistory = null;\n        this.shipmentId = null;\n      }\n    });\n  }\n\n  getShipment(id){\n    const fdata:FormData = new FormData();\n    fdata.append('shipment_id',id);\n    this._shipmentService.getShipment(fdata).subscribe(data => {\n      if(data){\n        if(data.data){\n          const shipData = data.data.data;\n          const sprData = data.data.shipper;\n          const recData = data.data.receiver;\n          const desData = data.data.destination;\n          const hisData = data.data.history;\n          const pacData = data.data.packages;\n          this.info = {\n            shipper : {\n              shipper_id : sprData.shipper_id,\n              name : sprData.name,\n              email : sprData.email,\n              phone : sprData.phone,\n              address : sprData.address,\n              ein : sprData.ein,\n              shipper_type_id : sprData.shipper_type_id\n            },\n            receiver : {\n              receiver_id : recData.receiver_id,\n              name : recData.name,\n              email : recData.email,\n              phone : recData.phone,\n              address : recData.address,\n            },\n            other : {\n              date : moment(new Date(shipData.date)).format('DD/MM/YYYY'),\n              container_type_id : shipData.container_type_id,\n              title : parseInt(shipData.title),\n              akey : parseInt(shipData.akey),\n              destination_name : desData.name,\n              destination_id : desData.id,\n              warehouse_name : shipData.warehouse_name,\n            },\n            history : hisData,\n            packages : []\n          };\n\n          for(let i = 0 ; i < pacData.length ; i++){\n            let pacItem = JSON.parse(pacData[i].data);\n\n            if(pacItem.type == '1'){\n              this.info.packages.push({\n                type:parseInt(pacItem.type),\n                year : pacItem.year,\n                model : pacItem.model,\n                mark : pacItem.mark,\n                vin : pacItem.vin,\n                value : pacItem.value\n              });\n            } else if(pacItem.type == '2') {\n              this.info.packages.push({\n                type:parseInt(pacItem.type),\n                description : pacItem.description,\n                value : pacItem.value\n              });\n            }\n\n          }\n\n          this._manager.getShipperTypes().subscribe(data => {\n            if(data){\n              this.shipper_types = data.data;\n              for(let i = 0 ; i < this.shipper_types.length ; i++){\n                if(this.shipper_types[i].id == sprData.shipper_type_id){\n                  console.log(sprData.name);\n                  this.shipperType = this.shipper_types[i].name;\n                }\n              }\n            }\n          });\n\n          this._manager.getContainerTypes().subscribe(data => {\n            if(data){\n              let ddt = data.data;\n              for(let i = 0 ; i < ddt.length ; i++){\n                if(ddt[i].id == shipData.container_type_id){\n                  this.containerType = ddt[i].name;\n                }\n              }\n            }\n          });\n\n\n          /*\n          this.dataForm.patchValue({\n            shipper : {\n              shipper_id : sprData.shipper_id,\n              name : sprData.name,\n              email : sprData.email,\n              phone : sprData.phone,\n              address : sprData.address,\n              ein : sprData.ein,\n              shipper_type_id : sprData.shipper_type_id\n            },\n            receiver : {\n              receiver_id : recData.receiver_id,\n              name : recData.name,\n              email : recData.email,\n              phone : recData.phone,\n              address : recData.address,\n            },\n            other : {\n              date : moment(new Date(shipData.date)),\n              container_type_id : shipData.container_type_id,\n              title : parseInt(shipData.title),\n              akey : parseInt(shipData.akey),\n              destination_name : desData.name,\n              destination_id : desData.id\n            }\n          });\n          for(let i = 0 ; i < pacData.length ; i++){\n            let pacItem = JSON.parse(pacData[i].data);\n\n            if(pacItem.type == '1'){\n              this.packageArray.push(this.fb.group({\n                type:[parseInt(pacItem.type)],\n                year : [pacItem.year,Validators.required],\n                model : [pacItem.model,Validators.required],\n                mark : [pacItem.mark,Validators.required],\n                vin : [pacItem.vin,Validators.required],\n                value : [pacItem.value],\n                file : [''],\n                input : [pacItem.input]\n              }));\n            } else if(pacItem.type == '2') {\n              this.packageArray.push(this.fb.group({\n                type:[parseInt(pacItem.type)],\n                description : [pacItem.description,Validators.required],\n                value : [pacItem.value,Validators.required],\n                file : [''],\n                input : [pacItem.input]\n              }));\n            }\n\n          }\n          */\n        }\n      }\n\n    });\n  }\n\n  savePDF() {\n    document.body.classList.add('print_mode');\n    this.exportAsService.save(this.exportAsConfig, 'shipment_' + this.shipmentId).subscribe(() => {\n      setTimeout(()=>{document.body.classList.remove('print_mode');},1000);\n    });\n  }\n\n  printPage(){\n    window.print();\n  }\n\n  openGallery(_item){\n    if(_item.file.length > 0){\n      this.gallery_items = _item.file.map(item => new ImageItem({ src: item, thumb: item }));\n\n\n      this.lightboxRef.load(this.gallery_items);\n      //this.lightbox.open(0);\n      this.lightbox.open(0, 'lightbox', {panelClass: 'fullscreen'});\n    }\n\n\n  }\n\n  openEditFiles(item){\n    const dialogRef = this.dialog.open(FilemanagerComponent, {\n      data: {item: item , type : 'shipment'}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  downloadGallery(item){\n    let formData:FormData = new FormData();\n    formData.append(\"history_id\", item.history_id);\n\n    this._shipmentService.downloadHistoryItem(formData).subscribe(event => {\n      if(event.history_file){\n        window.open(event.history_file, \"_blank\");\n      }\n    }, error => {\n      this.submitted = false;\n    });\n  }\n\n  downloadShipmentGallery(){\n    let formData:FormData = new FormData();\n    formData.append(\"shipment_id\", this.shipmentId.toString());\n\n    this._shipmentService.downloadHistoryItem(formData).subscribe(event => {\n      if(event.history_file){\n        window.open(event.history_file, \"_blank\");\n      }\n    }, error => {\n      this.submitted = false;\n    });\n  }\n\n}\n","<div class=\"cs-page-header\">\n  <span *ngIf=\"editMode\"><mat-icon mat-list-icon>edit</mat-icon> Shipment Info</span>\n  <div class=\"cs-right\">\n    <a [routerLink]=\"'/admin/shipments/list'\" mat-flat-button>\n      <mat-icon mat-list-icon>keyboard_arrow_left</mat-icon>  Back\n    </a>\n    <ng-container *ngIf=\"shipmentId\">\n      <button mat-flat-button (click)=\"printPage()\"><svg><use xlink:href=\"#print_ico\"></use></svg></button>\n      <button mat-flat-button (click)=\"savePDF()\"><svg><use xlink:href=\"#pdf_ico\"></use></svg></button>\n    </ng-container>\n\n  </div>\n</div>\n\n<div class=\"cs-box\" *ngIf=\"info\" id=\"content\">\n  <div class=\"col col3-1\">\n    <div>\n      <div class=\"main_header\" *ngIf=\"shipmentId\">\n        Tracking ID {{shipmentId | zeroid}}\n      </div>\n      <div class=\"col col2\">\n        <div>\n          <mat-card class=\"cs-card\">\n            <mat-card-header>\n              <mat-card-title>\n                Shipper Information\n              </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n              <h2>Shipper Name</h2>\n              <h4>{{ info.shipper.name }}</h4>\n\n              <h2>Type</h2>\n              <h4>{{ shipperType }}</h4>\n\n              <h2>Phone Number</h2>\n              <h4>{{ info.shipper.phone }}</h4>\n\n              <h2>Address</h2>\n              <h4>{{ info.shipper.address }}</h4>\n\n              <h2>Email</h2>\n              <h4>{{ info.shipper.email }}</h4>\n\n              <h2>EIN|Passport No</h2>\n              <h4>{{ info.shipper.ein }}</h4>\n\n            </mat-card-content>\n          </mat-card>\n        </div>\n\n        <div>\n          <mat-card class=\"cs-card\">\n            <mat-card-header>\n              <mat-card-title>Receiver Information</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n              <h2>Receiver Name</h2>\n              <h4>{{ info.receiver.name }}</h4>\n\n              <h2>Phone Number</h2>\n              <h4>{{ info.receiver.phone }}</h4>\n\n              <h2>Address</h2>\n              <h4>{{ info.receiver.address }}</h4>\n\n              <h2>Email</h2>\n              <h4>{{ info.receiver.email }}</h4>\n\n            </mat-card-content>\n          </mat-card>\n        </div>\n      </div>\n\n      <div class=\"col\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Shipment Information</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div>\n              <div class=\"cs-plist\">\n                <div *ngFor=\"let package of info.packages;let i = index\">\n\n                  <div class=\"pck1\" *ngIf=\"package.type == 1\">\n\n                    <div>\n                      <h2>Year</h2>\n                      <h4>{{ package.year }}</h4>\n                    </div>\n\n                    <div>\n                      <h2>Model</h2>\n                      <h4>{{ package.model }}</h4>\n\n                    </div>\n\n                    <div>\n                      <h2>Make</h2>\n                      <h4>{{ package.mark }}</h4>\n                    </div>\n\n                    <div>\n                      <h2>Vin</h2>\n                      <h4>{{ package.vin }}</h4>\n                    </div>\n\n\n\n                    <div>\n                      <h2>Value</h2>\n                      <h4>${{ package.value }}</h4>\n                    </div>\n\n                  </div>\n                  <div class=\"pck2\" *ngIf=\"package.type == 2\">\n                    <div>\n                      <h2>Description</h2>\n                      <h4>{{ package.description }}</h4>\n                    </div>\n\n                    <div>\n                      <h2>Value</h2>\n                      <h4>${{ package.value }}</h4>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col\" *ngIf=\"shipmentHistory\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Shipment History</mat-card-title>\n            <button class=\"hdownload\" mat-button (click)=\"downloadShipmentGallery()\"><mat-icon>cloud_download</mat-icon></button>\n          </mat-card-header>\n          <mat-card-content>\n            <div>\n              <div>\n                <table class=\"gtable\">\n                  <thead>\n                    <th>Shipment Status</th>\n                    <th>Image</th>\n                    <th *ngIf=\"permission.show_user_column\">Added By</th>\n                    <th>Note</th>\n                    <th>Added Date</th>\n                    <th>Actions</th>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let item of info.history\">\n                      <td>{{ item.name}}</td>\n                      <td>\n                        <button mat-button *ngIf=\"!item.file\" disabled><mat-icon>image</mat-icon></button>\n                        <button mat-button (click)=\"openGallery(item)\" *ngIf=\"item.file\"><mat-icon>image</mat-icon></button>\n                      </td>\n                      <td *ngIf=\"permission.show_user_column\">{{ item.username}}</td>\n                      <td>{{ item.note}}</td>\n                      <td>{{ item.date_added}}</td>\n                      <td>\n                        <button mat-button (click)=\"openEditFiles(item)\" *ngIf=\"permission.control_history_gallery && item.file\"><mat-icon>edit</mat-icon></button>\n                        <button mat-button (click)=\"downloadGallery(item)\" *ngIf=\"item.file\"><mat-icon>cloud_download</mat-icon></button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n    <div>\n      <div class=\"col\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Other Information</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <h2>Date</h2>\n            <h4>{{ info.other.date }}</h4>\n\n            <h2>Cargo Type</h2>\n            <h4>{{ containerType }}</h4>\n\n            <h2>Title</h2>\n            <h4>{{ info.other.title | yesno }}</h4>\n\n            <h2>Key</h2>\n            <h4>{{ info.other.akey | yesno }}</h4>\n\n            <h2>Destination</h2>\n            <h4>{{ info.other.destination_name }}</h4>\n\n            <h2>Warehouse</h2>\n            <h4>{{ info.other.warehouse_name }}</h4>\n\n\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n\n\n<ng-template #itemTemplate let-index=\"index\" let-type=\"type\" let-data=\"data\" let-currIndex=\"currIndex\">\n\t<ng-container *ngIf=\"type === 'imageViewer' && index === currIndex\">\n    <ngx-imageviewer [src]=\"data.src\"></ngx-imageviewer>\n  </ng-container>\n</ng-template>\n","import { Component, OnInit, ViewChild, TemplateRef, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FormControl} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport { FilesComponent } from '../../../shared/component/files/files.component';\nimport { ShipmentService } from '../../../shared/services/shipment.service';\nimport { Shipment } from '../../../models/shipment';\nimport { GeneralItem } from '../../../models/GeneralItem';\nimport { ManagerService } from '../../../shared/services/manager.service';\nimport { ConfirmComponent } from '../../../shared/modal/confirm/confirm.component';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\nimport { Gallery, GalleryItem, ImageItem, ThumbnailsPosition, ImageSize } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\n\nimport { ExportAsService, ExportAsConfig } from 'ngx-export-as';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { merge , of as observableOf, Subject } from 'rxjs';\nimport { startWith, switchMap, map, catchError, tap, debounceTime, debounce } from 'rxjs/operators';\nimport { ShipmentnotesComponent } from '../../../shared/shipmentnotes/shipmentnotes.component';\n\n\n\n@Component({\n  selector: 'app-shipments',\n  templateUrl: './shipments.component.html',\n  styleUrls: ['./shipments.component.scss']\n})\nexport class ShipmentsComponent implements OnInit , AfterViewInit {\n\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n  @ViewChild('itemTemplate') itemTemplate: TemplateRef<any>;\n\n  expandedElement: Shipment | null;\n\n\n  @ViewChild('content', { read: ElementRef }) content:ElementRef;\n\n  exportAsConfig:ExportAsConfig = {\n    type: 'pdf',\n    elementIdOrContent: 'content'\n  };\n\n  callSubject:Subject<void>;\n\n  gallery_items: GalleryItem[];\n\n  lightboxRef = null;\n\n  warehouses_list:GeneralItem[] = [];\n\n  shippment_statuses:GeneralItem[] = [];\n  shipmentStatusId:FormControl = new FormControl('');\n  warehouseId:FormControl = new FormControl('');\n  shipmentVehicle:FormControl = new FormControl('');\n  shipmentVehicleValue:FormControl = new FormControl('');\n  shipperName:FormControl = new FormControl();\n  dateCtrl:FormControl = new FormControl();\n  descriptionCtrl:FormControl = new FormControl();\n  receiverName:FormControl = new FormControl();\n  destinationName:FormControl = new FormControl();\n  trackingId:FormControl = new FormControl();\n\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  resultsLength = 0;\n  pageSize = 20;\n\n  searchTerms = {\n    shipper_name : '',\n    date : '',\n    receiver_name : '',\n    description : '',\n    shipment_status_id : '',\n    warehouse_id : '',\n    package_type : '',\n    package_value : '',\n    destination_name : '',\n    shipment_id : ''\n  }\n\n  loaded:boolean = false;\n\n  pms:any = {};\n\n  userId = 0;\n\n  pending_status_id = 0;\n\n  displayedColumns: string[] = ['shipment_id','receiver_name' , 'destination_name','container_no','title','akey','status','container_type','files','image','view','update','delete'];\n  dataSource:MatTableDataSource<Shipment> = new MatTableDataSource<Shipment>();\n  selection = new SelectionModel<Shipment>(true, []);\n\n  constructor(private exportAsService: ExportAsService,private router: Router , public dialog: MatDialog , private shipmentService:ShipmentService , private _manager:ManagerService , private auth:AuthenticationService , public gallery: Gallery, public lightbox: Lightbox) {\n    this.pending_status_id = this.auth.currentUserValue.pending_status_id;\n    if(auth.currentUserValue.permission){\n      this.userId = auth.currentUserValue.user_id;\n      this.pms = auth.currentUserValue.permission.shipment;\n      let filteredPermission = ['shipment_id'];\n      if(this.pms.view_shipper){\n        filteredPermission.push('shipper_name');\n      }\n      filteredPermission.push('receiver_name' , 'description' , 'date' , 'destination_name', 'warehouse_name','container_no');\n      filteredPermission.push('title','akey','status','container_type','note');\n\n      if(this.pms.view){\n        filteredPermission.push('view');\n      }\n      filteredPermission.push('actions');\n      /*\n      if(this.pms.update){\n        filteredPermission.push('update');\n      }\n      if(this.pms.delete){\n        filteredPermission.push('delete');\n      }\n      */\n\n\n\n      this.displayedColumns = filteredPermission;\n    }\n\n  }\n\n  resetFilter(){\n    this.searchTerms = {\n      shipper_name : '',\n      date : '',\n      receiver_name : '',\n      description : '',\n      shipment_status_id : '',\n      warehouse_id : '',\n      destination_name : '',\n      package_type : '',\n      package_value : '',\n      shipment_id : ''\n    };\n    this.warehouseId.setValue('');\n    this.shipmentStatusId.setValue('');\n    this.warehouseId.setValue('');\n    this.shipmentVehicle.setValue('');\n    this.shipmentVehicleValue.setValue('');\n    this.shipperName.setValue('');\n    this.descriptionCtrl.setValue('');\n    this.dateCtrl.setValue('');\n    this.receiverName.setValue('');\n    this.destinationName.setValue('');\n    this.trackingId.setValue('');\n\n    this.paginator.pageIndex = 0;\n    this.callSubject.next();\n\n  }\n\n  deleteShipment(id){\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: { title : 'Are you sure?' , id : id}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        const fdata:FormData = new FormData();\n        fdata.append('shipment_id',result);\n        this.shipmentService.deleteShipment(fdata).subscribe(data => {\n          this.dataSource.data = this.dataSource.data.filter(row => row.shipment_id != result);\n        });\n      }\n\n    });\n  }\n\n\n\n  ngOnInit() {\n    this.callSubject = new Subject();\n    this.callSubject.pipe(\n      tap(() => {\n        this.isLoadingResults = true;\n      }),\n      debounceTime(500)\n    ).subscribe(() => {\n      this.activeNavigation();\n    });\n\n    this.trackingId.valueChanges.subscribe(data => {\n      this.searchTerms.shipment_id = data;\n      this.applyFilter(data);\n    });\n\n    this.shipperName.valueChanges.subscribe(data => {\n      this.searchTerms.shipper_name = data;\n      this.applyFilter(data);\n    });\n\n    this.dateCtrl.valueChanges.subscribe(data => {\n      this.searchTerms.date = data ? moment(new Date(data)).format('YYYY-MM-DD') : '';\n      this.applyFilter(this.searchTerms.date);\n    });\n\n    this.descriptionCtrl.valueChanges.subscribe(data => {\n      this.searchTerms.description = data;\n      this.applyFilter(this.searchTerms.description);\n    });\n\n    this.receiverName.valueChanges.subscribe(data => {\n      this.searchTerms.receiver_name = data;\n      this.applyFilter(data);\n    });\n\n    this.destinationName.valueChanges.subscribe(data => {\n      this.searchTerms.destination_name = data;\n      this.applyFilter(data);\n    });\n\n    this.warehouseId.valueChanges.subscribe(data => {\n      this.searchTerms.warehouse_id = data;\n      this.applyFilter(data);\n    });\n\n\n    this.shipmentStatusId.valueChanges.subscribe(data => {\n      this.searchTerms.shipment_status_id = data;\n      this.applyFilter(data);\n    });\n\n    this.shipmentVehicle.valueChanges.subscribe(data => {\n      this.searchTerms.package_type = data;\n      this.applyFilter(data);\n    });\n\n    this.shipmentVehicleValue.valueChanges.subscribe(data => {\n      this.searchTerms.package_value = data;\n      this.applyFilter(data);\n    });\n\n    this.dataSource.filterPredicate = (data, filter):boolean => {\n      let pass_package = true;\n      if(this.searchTerms.package_type){\n        if(this.searchTerms.package_type == '0'){\n          pass_package = true;\n        } else {\n          for(let oi = 0 ; oi < data.packages.length ; oi++){\n            if(data.packages[oi][this.searchTerms.package_type]){\n              if(data.packages[oi][this.searchTerms.package_type].toString().toLowerCase().indexOf(this.searchTerms.package_value) !== -1){\n                pass_package = true;\n              } else {\n                pass_package = false;\n              }\n            } else {\n              pass_package = false;\n            }\n          }\n        }\n      }\n      return (data.shipper_name && data.shipper_name.toLowerCase().indexOf(this.searchTerms.shipper_name) !== -1)\n        && data.shipment_id.toString().toLowerCase().indexOf(this.searchTerms.shipment_id) !== -1\n        && data.warehouse_id.toString().toLowerCase().indexOf(this.searchTerms.warehouse_id) !== -1\n        && (data.receiver_name && data.receiver_name.toString().toLowerCase().indexOf(this.searchTerms.receiver_name) !== -1)\n        && data.shipment_status_id.toString().toLowerCase().indexOf(this.searchTerms.shipment_status_id) !== -1\n        && (data.destination_name && data.destination_name.toLowerCase().indexOf(this.searchTerms.destination_name) !== -1) && pass_package;\n    };\n\n\n    this.lightboxRef = this.gallery.ref('lightbox');\n\n    this.lightboxRef.setConfig({\n      imageSize: ImageSize.Contain,\n      thumbPosition: ThumbnailsPosition.Top,\n      itemTemplate: this.itemTemplate,\n      gestures: false\n    });\n\n  }\n\n  ngAfterViewInit(){\n    this.activeNavigation();\n  }\n\n  activeNavigation(){\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.shipmentService!.getShipments({sort : this.sort.active, order : this.sort.direction , pagesize : this.paginator.pageSize, page : this.paginator.pageIndex + 1 , filter : Object.keys(this.searchTerms).map(key => key + '___' + this.searchTerms[key]).join('|')});\n        }),\n        map(data => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.total;\n          return data.items;\n\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(data => {\n        this.dataSource.data = data;\n        if(!this.loaded){\n          this._manager.getShipmentStatuses().subscribe(data => {\n            if(data){\n              this.shippment_statuses = data.data;\n            }\n            this._manager.getWarehouses().subscribe(data => {\n              if(data){\n                this.warehouses_list = data.data;\n              }\n              this.loaded = true;\n\n              setTimeout(() => {\n                this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n                /*\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n                */\n              }, 0);\n\n            });\n          });\n        } else {\n\n        }\n      });\n\n\n  }\n\n  applyFilter(val) {\n    let filterValue = val.toString();\n    this.paginator.pageIndex = 0;\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.callSubject.next();\n    //this.dataSource.filter = filterValue;\n  }\n\n\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Shipment): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.shipment_id}`;\n  }\n\n  openPhoto(_shipment_id):void{\n\n    let formData:FormData = new FormData();\n      formData.append('shipment_id',_shipment_id);\n      this.shipmentService.getShipmentHistory(formData).subscribe(data => {\n        if(data){\n          let _dataImages = [];\n          for(let i = 0 ; i < data.data.length; i++){\n            let files = data.data[i].file;\n            if(files && files.length > 0){\n              for(let j = 0 ; j < files.length; j++){\n\n                _dataImages.push(files[j]);\n              }\n            }\n\n            //this.images.push({path : data.data[i].file});\n          }\n          if(_dataImages.length > 0){\n            this.gallery_items = _dataImages.map(item => new ImageItem({ src: item, thumb: item }));\n            this.lightboxRef.load(this.gallery_items);\n            this.lightbox.open(0, 'lightbox', {panelClass: 'fullscreen'});\n          }\n\n        }\n      });\n\n    /*\n    const dialogRef = this.dialog.open(GalleryComponent, {\n      data: {shipment_id : $shipment_id}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n    */\n  }\n\n  updateNotes(item){\n    const dialogRef = this.dialog.open(ShipmentnotesComponent, {\n      data: {item : item}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n\n  openFiles($shipment_id):void{\n    const dialogRef = this.dialog.open(FilesComponent, {\n      data: {shipment_id : $shipment_id}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  savePDF() {\n    document.body.classList.add('print_mode');\n    this.exportAsService.save(this.exportAsConfig, 'shipments').subscribe(() => {\n      setTimeout(()=>{document.body.classList.remove('print_mode');},1000);\n    });\n  }\n\n  printPage(){\n    window.print();\n  }\n\n}\n","<ng-template #packageItem let-package=\"package\">\n\n\n  <td *ngIf=\"package.type == 1\">\n    <div>{{ package.year }} {{ package.model }} {{ package.mark }}</div>\n    <div><b>{{ package.vin }}</b></div>\n  </td>\n  <td *ngIf=\"package.type == 2\">\n    <div>{{ package.description }}</div>\n    <!-- <div>{{ package.value }}</div> -->\n  </td>\n</ng-template>\n<div class=\"cs-page-header\">\n  <span><mat-icon mat-list-icon>stars</mat-icon> Shipments</span>\n  <div class=\"cs-right\">\n    <a [routerLink]=\"'/admin/shipments/add'\" mat-flat-button *ngIf=\"pms.add\">\n      <mat-icon mat-list-icon>add_circle_outline</mat-icon>  Add Shipment\n    </a>\n    <button mat-flat-button (click)=\"printPage()\"><svg><use xlink:href=\"#print_ico\"></use></svg></button>\n    <button mat-flat-button (click)=\"savePDF()\"><svg><use xlink:href=\"#pdf_ico\"></use></svg></button>\n  </div>\n</div>\n<div class=\"cs-box\">\n  <div class=\"form-filter\">\n    <form>\n\n\n      <mat-form-field>\n        <mat-label>ID</mat-label>\n        <input type=\"text\" matInput [formControl]=\"trackingId\">\n\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"pms.view_shipper\">\n        <mat-label>Shipper Name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"shipperName\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Status</mat-label>\n        <mat-select [formControl]=\"shipmentStatusId\">\n          <mat-option value=\"\">All Statuses</mat-option>\n          <mat-option *ngFor=\"let option of shippment_statuses\" [value]=\"option.id\">\n            {{option.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n\n\n      <!-- <mat-form-field>\n        <mat-label>Receiver Name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"receiverName\">\n      </mat-form-field> -->\n      <mat-form-field>\n        <mat-label>Warehouse</mat-label>\n        <mat-select [formControl]=\"warehouseId\">\n          <mat-option value=\"\">All Warehouses</mat-option>\n          <mat-option *ngFor=\"let option of warehouses_list\" [value]=\"option.id\">\n            {{option.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Destination</mat-label>\n        <input type=\"text\" matInput [formControl]=\"destinationName\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Date</mat-label>\n        <input matInput [matDatepicker]=\"pickpicker\" [formControl]=\"dateCtrl\" placeholder=\"Date\">\n        <mat-datepicker-toggle matSuffix [for] = \"pickpicker\"></mat-datepicker-toggle>\n        <mat-datepicker #pickpicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Description</mat-label>\n        <input type=\"text\" matInput [formControl]=\"descriptionCtrl\" autocomplete=\"off\">\n      </mat-form-field>\n\n      <div class=\"filter-btn\">\n        <button mat-raised-button color=\"warn\" (click)=\"resetFilter()\">Reset</button>\n      </div>\n    </form>\n\n  </div>\n  <div class=\"mat-elevation-z8\">\n    <div *ngIf=\"loaded; else rowsPlaceHolder\">\n\n    </div>\n    <div class=\"loading-shade\" *ngIf=\"loaded && (isLoadingResults || isRateLimitReached)\">\n      <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n    <table mat-table [hidden]=\"!loaded\" [dataSource]=\"dataSource\" matSort matSortDisableClear matSortActive=\"shipment_id\" matSortDirection=\"desc\" #content id=\"content\">\n\n      <ng-container matColumnDef=\"shipment_id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Tracking ID </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"expandedElement = expandedElement === element ? null : element\" > {{element.shipment_id | zeroid}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <table>\n            <tr *ngFor=\"let package of element.packages;let i = index\">\n              <ng-container [ngTemplateOutlet]=\"packageItem\" [ngTemplateOutletContext]=\"{ package : package }\"></ng-container>\n            </tr>\n          </table>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.date | customdate}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"shipper_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Shipper Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.shipper_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"receiver_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Receiver Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.receiver_name}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"destination_name\" disableClear>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Destination </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.destination_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"warehouse_name\" disableClear>\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Warehouse </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.warehouse_name | none}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Status </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.shipment_status | none}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"container_type\">\n        <th mat-header-cell *matHeaderCellDef> CARGO TYPE </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.container_type}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"container_no\">\n        <th mat-header-cell *matHeaderCellDef> Container No </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-button color=\"primary\" *ngIf=\"element.container_no\" [routerLink]=\"['/admin/containers/info', element.container_id]\">{{element.container_no  | none}}</button>\n          <button mat-button color=\"primary\" *ngIf=\"!element.container_no\">{{element.container_no  | none}}</button>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef> Title </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.title | yesno}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"akey\">\n        <th mat-header-cell *matHeaderCellDef> Key </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.akey | yesno}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"note\">\n        <th mat-header-cell *matHeaderCellDef> Your Note </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div class=\"txtibtn\">\n            <button mat-button color=\"primary\" (click)=\"updateNotes(element)\" *ngIf=\"userId == element.user_id\">\n              <mat-icon mat-list-icon>edit</mat-icon>\n            </button>\n            <div>{{element.note}}</div>\n          </div>\n\n        </td>\n      </ng-container>\n\n\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item color=\"warn\" (click)=\"openPhoto(element.shipment_id)\">\n              <mat-icon>image</mat-icon>\n              <span>Gallery</span>\n            </button>\n            <button mat-menu-item color=\"warn\" (click)=\"openFiles(element.shipment_id)\">\n              <mat-icon>attach_file</mat-icon>\n              <span>Files</span>\n            </button>\n            <!-- <button *ngIf=\"pms.view\" mat-menu-item color=\"warn\" [routerLink]=\"['/admin/shipments/info', element.shipment_id]\">\n              <mat-icon>remove_red_eye</mat-icon>\n              <span>View</span>\n            </button> -->\n            <ng-container *ngIf=\"pms.update && pms.disable_after_pending\">\n              <button mat-menu-item aria-label=\"Edit\" [routerLink]=\"['/admin/shipments/', element.shipment_id]\" *ngIf=\"element.shipment_status_id == pending_status_id\">\n                <mat-icon mat-list-icon>edit</mat-icon>\n                <span>Update</span>\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"pms.update && !pms.disable_after_pending\">\n              <button mat-menu-item aria-label=\"Edit\" [routerLink]=\"['/admin/shipments/', element.shipment_id]\">\n                <mat-icon mat-list-icon>edit</mat-icon>\n                <span>Update</span>\n              </button>\n            </ng-container>\n\n            <ng-container *ngIf=\"pms.delete && pms.disable_after_pending\">\n              <button mat-menu-item aria-label=\"Edit\" (click)=\"deleteShipment(element.shipment_id)\" *ngIf=\"element.shipment_status_id == pending_status_id\">\n                <mat-icon mat-list-icon>delete</mat-icon>\n                <span>Delete</span>\n              </button>\n            </ng-container>\n            <ng-container *ngIf=\"pms.delete && !pms.disable_after_pending\">\n              <button mat-menu-item aria-label=\"Edit\" (click)=\"deleteShipment(element.shipment_id)\">\n                <mat-icon mat-list-icon>delete</mat-icon>\n                <span>Delete</span>\n              </button>\n            </ng-container>\n          </mat-menu>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"view\">\n        <th mat-header-cell *matHeaderCellDef> View </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button color=\"warn\" [routerLink]=\"['/admin/shipments/info', element.shipment_id]\">\n            <mat-icon>remove_red_eye</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n      <!--\n      <ng-container matColumnDef=\"update\">\n        <th mat-header-cell *matHeaderCellDef> Update </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <ng-container *ngIf=\"pms.disable_after_pending\">\n            <button mat-icon-button aria-label=\"Edit\" [routerLink]=\"['/admin/shipments/', element.shipment_id]\" *ngIf=\"element.shipment_status_id == pending_status_id\">\n              <mat-icon mat-list-icon>edit</mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf=\"!pms.disable_after_pending\">\n            <button mat-icon-button aria-label=\"Edit\" [routerLink]=\"['/admin/shipments/', element.shipment_id]\">\n              <mat-icon mat-list-icon>edit</mat-icon>\n            </button>\n          </ng-container>\n\n\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <ng-container *ngIf=\"pms.disable_after_pending\">\n            <button mat-icon-button aria-label=\"Edit\" (click)=\"deleteShipment(element.shipment_id)\" *ngIf=\"element.shipment_status_id == pending_status_id\">\n              <mat-icon mat-list-icon>delete</mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf=\"!pms.disable_after_pending\">\n            <button mat-icon-button aria-label=\"Edit\" (click)=\"deleteShipment(element.shipment_id)\">\n              <mat-icon mat-list-icon>delete</mat-icon>\n            </button>\n          </ng-container>\n\n        </td>\n      </ng-container> -->\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n\n      <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\"\n      class=\"sp-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n      </tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"sp-detail-row\"></tr> -->\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 30, 100]\" [length]=\"resultsLength\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n\n\n<ng-template #rowsPlaceHolder>\n  <app-skeleton type=\"rows\"></app-skeleton>\n</ng-template>\n\n\n<ng-template #itemTemplate let-index=\"index\" let-type=\"type\" let-data=\"data\" let-currIndex=\"currIndex\">\n\t<ng-container *ngIf=\"type === 'imageViewer' && index === currIndex\">\n    <ngx-imageviewer [src]=\"data.src\"></ngx-imageviewer>\n  </ng-container>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shipment',\n  templateUrl: './shipment.component.html',\n  styleUrls: ['./shipment.component.scss']\n})\nexport class ShipmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, OnChanges, SimpleChanges, ViewChild, TemplateRef, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ReceiverComponent } from '../../../shared/component/receiver/receiver.component';\nimport { FormControl, FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {map, startWith, debounceTime, switchMap} from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { ManagerService } from '../../../shared/services/manager.service';\nimport { GeneralItem } from '../../../models/GeneralItem';\nimport { Receiver } from '../../../models/receiver';\nimport { Shipper } from '../../../models/shipper';\nimport { ShipmentService } from '../../../shared/services/shipment.service';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { ImageComponent } from '../../../shared/modal/image/image.component';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n\nimport { Gallery, GalleryItem, ImageItem, ThumbnailsPosition, ImageSize } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\nimport { User } from '../../../models/user';\nimport { environment } from '../../../../environments/environment';\nimport { FilemanagerComponent } from '../../../shared/modal/filemanager/filemanager.component';\nimport { ShipperService } from '../../../shared/services/shipper.service';\nimport { ReceiverService } from '../../../shared/services/receiver.service';\n\n\n\n\n@Component({\n  selector: 'app-createshipments',\n  templateUrl: './createshipments.component.html',\n  styleUrls: ['./createshipments.component.scss'],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ]\n})\nexport class CreateshipmentsComponent implements OnInit , OnChanges {\n\n  @ViewChild('itemTemplate') itemTemplate: TemplateRef<any>;\n\n  searchReceiverTerms = {\n    name : '',\n  };\n\n  searchShipperTerms = {\n    name : '',\n  };\n  gallery_items: GalleryItem[];\n\n  shipmentHistory = [];\n\n  lightboxRef = null;\n\n  submitted = false;\n\n  history_files = [];\n\n  users_list: User[] = [];\n  shippers_list: Shipper[] = [];\n  receivers_list: Receiver[] = [];\n  destinations_list: GeneralItem[] = [];\n  warehouses_list: GeneralItem[] = [];\n\n  shipper_types:GeneralItem[] = [];\n  container_types:GeneralItem[] = [];\n\n  shippment_statuses:GeneralItem[] = [];\n  filterUsers: Observable<User[]>;\n  filteredShippers: Observable<Shipper[]>;\n  filteredReceivers: Observable<Receiver[]>;\n  filteredDestinations: Observable<GeneralItem[]>;\n\n  dataSource = new MatTableDataSource<Shipper>(this.shippers_list);\n  dataSource2 = new MatTableDataSource<Receiver>(this.receivers_list);\n\n  userNameCtrl:FormControl = new FormControl('',[Validators.required]);\n\n  minDate = moment();\n\n  dataForm:FormGroup;\n\n  percentCompleted:number = 0;\n\n  isUploaded:boolean = false;\n\n  formData:FormData;\n\n  shipmentId: number;\n  editMode:boolean = false;\n  private sub: any;\n\n  permission:any = {};\n  isAdmin = false;\n\n\n  constructor(private _snackBar: MatSnackBar , private router: Router,public dialog: MatDialog , private route: ActivatedRoute , private fb:FormBuilder,private _manager:ManagerService , private _shipmentService:ShipmentService , private shipperService:ShipperService , private receiverService:ReceiverService , private auth:AuthenticationService,public gallery: Gallery, public lightbox: Lightbox) {\n    if(auth.currentUserValue.permission){\n\n      this.permission = auth.currentUserValue.permission.shipment;\n      if(this.permission.canassign){\n        this.isAdmin = this.permission.canassign;\n      } else {\n        if(auth.currentUserValue.user_group_id == 1){\n          this.isAdmin = true;\n        }\n      }\n    }\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n  }\n\n\n\n  ngOnInit(): void {\n\n    //this.id = this.route.snapshot.paramMap.get('id') ? parseInt(this.route.snapshot.paramMap.get('id')) : 0;\n\n\n    this.resetForm();\n\n\n    this._shipmentService.getBulk().subscribe(data => {\n      if(data){\n        this.shippers_list = data.shippers;\n        this.activeShippers();\n\n        this.receivers_list = data.receivers;\n        this.activeReceivers();\n\n        this.destinations_list = data.destinations;\n        this.activeDestinations();\n\n        this.shipper_types = data.shipper_types;\n\n        this.container_types = data.container_types;\n\n\n        this.shippment_statuses = data.shipment_statuses.filter(item => this.permission.statuses.indexOf(item.id) !== -1);\n        if(!this.shipmentId){\n          this.dataForm.patchValue({\n            history : {\n              shipment_status_id : this.shippment_statuses[0].id\n            }\n          });\n        }\n\n        this.warehouses_list = data.warehouses;\n\n        this.auth.getUsers().subscribe(data => {\n          if(data){\n            if(data){\n              this.users_list = data.data;\n              this.activeUsers();\n            }\n          }\n          this.activeParameters();\n        });\n\n      }\n    });\n\n\n\n\n\n    this.lightboxRef = this.gallery.ref('lightbox');\n\n    this.lightboxRef.setConfig({\n      imageSize: ImageSize.Contain,\n      thumbPosition: ThumbnailsPosition.Top,\n      itemTemplate: this.itemTemplate,\n      gestures: false\n    });\n\n\n\n\n\n  }\n\n  activeParameters(){\n    this.sub = this.route.params.subscribe(params => {\n      this.shipmentId = +params['id'];\n      if(!isNaN(this.shipmentId)){\n        this.editMode =true;\n        this.getShipment(this.shipmentId);\n\n      } else {\n\n        this.editMode =false;\n        this.shipmentHistory = null;\n        this.shipmentId = null;\n        //this.resetForm();\n        this.dataForm.get(\"other\").get('attach_file').setValidators([Validators.required]);\n\n      }\n    });\n  }\n\n  activeDestinations(){\n    this.filteredDestinations = this.dataForm.get(\"other\").get('destination_name').valueChanges\n    .pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.name),\n      map(name => name ? this._filterDestination(name) : this.destinations_list?.slice())\n    );\n  }\n\n\n\n  activeUsers(){\n    this.filterUsers = this.userNameCtrl.valueChanges\n    .pipe(\n      startWith(''),\n      map(value => {\n        return typeof value === 'string' ? value : (value.firstname + ' ' + value.lastname)\n      }),\n      map(name => name ? this._filterUser(name) : this.users_list?.slice())\n    );\n  }\n\n  activeShippers(){\n    this.filteredShippers = this.dataForm.get(\"shipper\").get('name').valueChanges\n    .pipe(\n      startWith(''),\n      debounceTime(500),\n      map(value => typeof value === 'string' ? value : value.name),\n      switchMap((value) => value ? this._filterShipper(value) : of(this.shippers_list?.slice()))\n    );\n  }\n\n  activeReceivers(){\n    this.filteredReceivers = this.dataForm.get(\"receiver\").get('name').valueChanges\n    .pipe(\n      startWith(''),\n      debounceTime(500),\n      map(value => typeof value === 'string' ? value : value.name),\n      switchMap((value) => value ? this._filterReceiver(value) : of(this.receivers_list?.slice()))\n    );\n  }\n\n  resetForm(){\n    this.dataForm = this.fb.group({\n      shipper : this.fb.group({\n        new : [''],\n        shipper_id : [''],\n        name : ['',Validators.required],\n        phone : ['',Validators.required],\n        address : ['',Validators.required],\n        email : ['', [Validators.required, Validators.email]],\n        ein : ['',Validators.required],\n        shipper_type_id : ['',Validators.required]\n      }),\n      receiver : this.fb.group({\n        new : [''],\n        receiver_id : [''],\n        name : ['',Validators.required],\n        phone : ['',Validators.required],\n        address : ['',Validators.required],\n        email : ['', [Validators.required, Validators.email]]\n      }),\n      other : this.fb.group({\n        date : [moment(),Validators.required],\n        container_type_id : ['',Validators.required],\n        destination_id : [''],\n        destination_name : ['',Validators.required],\n        warehouse_id : ['',Validators.required],\n        akey:[0],\n        title:[0],\n        new_destination : [''],\n        attach_file:[''],\n        note:['']\n      }),\n      history : this.fb.group({\n        shipment_status_id : [''],\n        note : [''],\n        file : ['']\n      }),\n      packages : this.fb.array([],Validators.required)\n    });\n  }\n\n  getShipment(id){\n    const fdata:FormData = new FormData();\n    fdata.append('shipment_id',id);\n    this._shipmentService.getShipment(fdata).subscribe(data => {\n      if(data){\n        if(data.data){\n          const shipData = data.data.data;\n          const sprData = data.data.shipper;\n          const recData = data.data.receiver;\n          const desData = data.data.destination;\n          const hisData = data.data.history;\n          const pacData = data.data.packages;\n\n          this.shipmentHistory = hisData;\n\n          this.dataForm.patchValue({\n            shipper : {\n              shipper_id : sprData.shipper_id,\n              name : sprData.name,\n              email : sprData.email,\n              phone : sprData.phone,\n              address : sprData.address,\n              ein : sprData.ein,\n              shipper_type_id : sprData.shipper_type_id\n            },\n            receiver : {\n              receiver_id : recData.receiver_id,\n              name : recData.name,\n              email : recData.email,\n              phone : recData.phone,\n              address : recData.address,\n            },\n            other : {\n              date : moment(new Date(shipData.date)),\n              container_type_id : shipData.container_type_id,\n              title : parseInt(shipData.title),\n              akey : parseInt(shipData.akey),\n              warehouse_id : shipData.warehouse_id,\n              destination_name : desData.name,\n              destination_id : desData.id,\n              note : shipData.note,\n            },history : {\n              shipment_status_id : shipData.shipment_status_id\n            }\n          });\n\n          if(moment(new Date(shipData.date)).isAfter(this.minDate)){\n            //this.minDate = moment(new Date(shipData.date));\n          }\n\n\n          for(let i = 0 ; i < pacData.length ; i++){\n            let pacItem = JSON.parse(pacData[i].data);\n\n            if(pacItem.type == '1'){\n              this.packageArray.push(this.fb.group({\n                type:[parseInt(pacItem.type)],\n                year : [pacItem.year,Validators.required],\n                model : [pacItem.model,Validators.required],\n                mark : [pacItem.mark,Validators.required],\n                vin : [pacItem.vin,Validators.required],\n                value : [pacItem.value],\n                file : [''],\n                input : [pacItem.input]\n              }));\n            } else if(pacItem.type == '2') {\n              this.packageArray.push(this.fb.group({\n                type:[parseInt(pacItem.type)],\n                description : [pacItem.description,Validators.required],\n                value : [pacItem.value,Validators.required],\n                file : [''],\n                input : [pacItem.input]\n              }));\n            }\n\n          }\n        }\n      }\n\n    });\n  }\n\n\n  dateHandler(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.dataForm.get(\"other\").get('date').setValue(moment(event.value).format('MM/DD/YYYY'));\n  }\n\n  onFileChange(event)  {\n    this.history_files = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.history_files.push(event.target.files[i]);\n    }\n\n  }\n\n  onAttachFileChange(event) {\n    this.dataForm.get(\"other\").get('attach_file').setValue(event.target.files[0]);\n  }\n\n  deletePackage(index){\n    this.packageArray.removeAt(index);\n  }\n\n  onPackageFileChange(event,i)  {\n    this.packageArray.at(i).get('file').setValue(event.target.files[0]);\n    //console.log(this.dataForm.get(\"packages\"));\n    //this.dataForm.get(\"packages\")[0].get('file').setValue(event.target.files[0]);\n  }\n\n\n  get packageArray(){\n    return this.dataForm.get('packages') as FormArray;\n  }\n\n  get shipperForm(){\n    return this.dataForm.controls.shipper['controls'];\n  }\n\n  get receiverForm(){\n    return this.dataForm.controls.receiver['controls'];\n  }\n\n  get otherForm(){\n    return this.dataForm.controls.other['controls'];\n  }\n\n  addPackage(type){\n    if(type == 1){\n      this.packageArray.push(this.fb.group({\n        type:[type],\n        year : ['',Validators.required],\n        model : ['',Validators.required],\n        mark : ['',Validators.required],\n        vin : ['',Validators.required],\n        value : ['',Validators.required],\n        file : [''],\n        input : ['']\n      }));\n    } else if(type == 2) {\n      this.packageArray.push(this.fb.group({\n        type:[type],\n        description : ['',Validators.required],\n        value : ['',Validators.required],\n        file : [''],\n        input : ['']\n      }));\n    }\n  }\n\n  newShipperChange(event){\n    if(event.checked){\n      this.dataForm.patchValue({\n        shipper : {\n          shipper_id : '',\n          name : '',\n          phone : '',\n          address : '',\n          email : '',\n          ein : '',\n          shipper_type_id : ''\n        }\n      });\n    }\n  }\n\n  newReceiverChange(event){\n    if(event.checked){\n      this.dataForm.patchValue({\n        receiver : {\n          receiver_id : '',\n          name : '',\n          phone : '',\n          address : '',\n          email : ''\n        }\n      });\n    }\n  }\n\n  newDestinationChange(event){\n    if(event.checked){\n      this.dataForm.patchValue({\n        other : {\n          destination_id : '',\n          destination_name : ''\n        }\n      });\n    }\n  }\n\n  removePackage(index){\n    this.packageArray.removeAt(index);\n  }\n\n  openGallery(_item){\n    if(_item.file.length > 0){\n      this.gallery_items = _item.file.map(item => new ImageItem({ src: item, thumb: item }));\n\n\n      this.lightboxRef.load(this.gallery_items);\n      //this.lightbox.open(0);\n      this.lightbox.open(0, 'lightbox', {panelClass: 'fullscreen'});\n    }\n\n\n  }\n\n  openEditFiles(item){\n    const dialogRef = this.dialog.open(FilemanagerComponent, {\n      data: {item: item , type : 'shipment'}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  downloadGallery(item){\n    let formData:FormData = new FormData();\n    formData.append(\"history_id\", item.history_id);\n\n    this._shipmentService.downloadHistoryItem(formData).subscribe(event => {\n      if(event.history_file){\n        window.open(event.history_file, \"_blank\");\n      }\n    }, error => {\n      this.submitted = false;\n    });\n  }\n\n  downloadShipmentGallery(){\n    let formData:FormData = new FormData();\n    formData.append(\"shipment_id\", this.shipmentId.toString());\n\n    this._shipmentService.downloadHistoryItem(formData).subscribe(event => {\n      if(event.history_file){\n        window.open(event.history_file, \"_blank\");\n      }\n    }, error => {\n      this.submitted = false;\n    });\n  }\n\n\n  openImage(url){\n    const dialogRef = this.dialog.open(ImageComponent, {\n      data: {url: url}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  submitForm(){\n    this.submitted = true;\n    let formData:FormData = new FormData();\n    let copyFormData = JSON.parse(JSON.stringify(this.dataForm.value));\n    copyFormData.other.attach_file = this.dataForm.get(\"other\").get('attach_file').value;\n    this.jsonToFormData(formData,copyFormData);\n\n    for (var i = 0; i < this.history_files.length; i++) {\n      formData.append(\"history_files[]\", this.history_files[i]);\n    }\n\n    if(this.shipmentId){\n      formData.append('shipment_id',this.shipmentId.toString());\n    }\n\n    if(this.userNameCtrl.value){\n      formData.append('assigned_user_id',this.userNameCtrl.value.user_id);\n    }\n\n    formData.append('shipment_link',`${environment.home}admin/shipments/info/`);\n\n    this._shipmentService.saveShipment(formData).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.percentCompleted = Math.round(100 * event.loaded  / event.total);\n      } else if (event instanceof HttpResponse) {\n        this.isUploaded = true;\n        this.submitted = false;\n        this.openSnackBar('Data submited successfully','');\n        if(!this.shipmentId){\n          this.router.navigate([\"/admin/shipments/list\"]);\n        }\n        console.log(\"success\");\n      }\n    }, error => {\n      this.submitted = false;\n      this.openSnackBar('Something wrong happen!','');\n      //this.router.navigate([\"/admin/shipments/list\"]);\n      console.log(\"error\");\n    });\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  buildFormData(formData, data, parentKey) {\n    if (data && typeof data === 'object' && !(data instanceof Date) && !(data instanceof File)) {\n      Object.keys(data).forEach(key => {\n        this.buildFormData(formData, data[key], parentKey ? `${parentKey}[${key}]` : key);\n      });\n    } else {\n      const value = data == null ? '' : data;\n\n      formData.append(parentKey, value);\n    }\n  }\n\n  jsonToFormData(formData , data) {\n    this.buildFormData(formData, data,'');\n  }\n\n\n  displayShipper(user: Shipper): string {\n    return user && user.name ? user.name : '';\n  }\n\n  displayReceiver(user: Receiver): string {\n    return user && user.name ? user.name : '';\n  }\n\n  displayDestination(item?: GeneralItem): string {\n    return item && item.name ? item.name : '';\n  }\n\n  displayUsers(item: User): string {\n\n    return item && item.firstname ? (item.firstname + ' ' + item.lastname) : '';\n  }\n\n  onUserSelectionChanged($event):any{\n    const userData = $event.option.value;\n\n    this.userNameCtrl.setValue(userData);\n  }\n\n  onDestinationSelectionChanged($event):any{\n    const shpdata = $event.option.value;\n    this.dataForm.patchValue({\n      other : {\n        destination_id : shpdata.id,\n        destination_name : shpdata.name\n      }\n    });\n  }\n\n  onShipperSelectionChanged($event):any{\n    const shpdata = $event.option.value;\n    this.dataForm.patchValue({\n      shipper : {\n        shipper_id : shpdata.shipper_id,\n        name : shpdata.name,\n        phone : shpdata.phone,\n        address : shpdata.address,\n        email : shpdata.email,\n        ein : shpdata.ein,\n        shipper_type_id : shpdata.shipper_type_id\n      }\n    });\n  }\n\n  onNewShipperChange($event):any{\n    this.dataForm.get('shipper').get('name').setValue('');\n  }\n\n  onReceiverSelectionChanged($event):any{\n    this.dataForm.get('receiver').get('name').setValue($event.option.value);\n    const shpdata = $event.option.value;\n    this.dataForm.patchValue({\n      receiver : {\n        receiver_id : shpdata.receiver_id,\n        name : shpdata.name,\n        phone : shpdata.phone,\n        address : shpdata.address,\n        email : shpdata.email\n\n      }\n    });\n  }\n\n  private _filterUser(name: string): User[] {\n    const filterValue = name.toLowerCase();\n    return this.users_list?.filter(option => (option.firstname + ' ' + option.lastname).toLowerCase().indexOf(filterValue) === 0);\n  }\n\n\n  private _filterShipper(value: string) {\n    this.searchShipperTerms.name = value;\n    return this.shipperService!.getShippers({page : 1 , filter : Object.keys(this.searchShipperTerms).map(key => key + '___' + this.searchShipperTerms[key]).join('|')})\n      .pipe(\n        map((data) => {\n          if(data.items){\n            return data.items;\n          }\n          return [];\n        })\n      );\n  }\n\n  private _filterReceiver(value: string) {\n    this.searchReceiverTerms.name = value;\n    return this.receiverService!.getReceivers({page : 1 , filter : Object.keys(this.searchReceiverTerms).map(key => key + '___' + this.searchReceiverTerms[key]).join('|')})\n      .pipe(\n        map((data) => {\n          if(data.items){\n            return data.items;\n          }\n          return [];\n        })\n      );\n\n  }\n\n  private _filterDestination(name: string):GeneralItem[] {\n    const filterValue = name.toLowerCase();\n\n    return this.destinations_list?.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n\n  openReceiverDialog(): void {\n    const dialogRef = this.dialog.open(ReceiverComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  dateFilter(date):boolean{\n    let odate = this.dataForm.controls.other['controls'].date.value;\n    if(odate){\n      return odate.format('MM/DD/YYYY') == date.format('MM/DD/YYYY') || new Date(date.format('MM/DD/YYYY')) >= new Date(this.minDate.format('MM/DD/YYYY'));\n    } else {\n      return new Date(date.format('MM/DD/YYYY')) >= new Date(this.minDate.format('MM/DD/YYYY'));\n    }\n\n  }\n}\n","<div class=\"cs-page-header\">\n  <span *ngIf=\"!editMode\"><mat-icon mat-list-icon>add</mat-icon> Create Shipment</span>\n  <span *ngIf=\"editMode\"><mat-icon mat-list-icon>edit</mat-icon> Edit Shipment</span>\n  <div class=\"cs-right\">\n    <a [routerLink]=\"'/admin/shipments/list'\" mat-flat-button>\n      <mat-icon mat-list-icon>keyboard_arrow_left</mat-icon>  Back\n    </a>\n\n  </div>\n</div>\n\n<form class=\"cs-box\" [formGroup]=\"dataForm\" >\n  <div class=\"col col3-1\">\n    <div>\n      <div class=\"main_header\" *ngIf=\"shipmentId\">\n        Tracking ID {{shipmentId | zeroid}}\n      </div>\n      <div class=\"col col2\">\n        <div formGroupName=\"shipper\">\n          <mat-card class=\"cs-card\">\n            <mat-card-header>\n              <mat-card-title>\n                Shipper Information\n              </mat-card-title>\n              <span>\n                <mat-slide-toggle formControlName=\"new\" (change)=\"newShipperChange($event)\">Add New</mat-slide-toggle>\n              </span>\n            </mat-card-header>\n            <mat-card-content>\n              <mat-form-field>\n                <mat-label>Shipper Name</mat-label>\n\n                <ng-container *ngIf=\"dataForm.controls.shipper['controls'].new.value\">\n                  <input type=\"text\" matInput value=\"\" autocomplete=\"off\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': (shipperForm.name.touched || submitted) && shipperForm.name.errors?.required }\">\n                </ng-container>\n                <ng-container *ngIf=\"!dataForm.controls.shipper['controls'].new.value\">\n                  <input type=\"text\" matInput [matAutocomplete]=\"auto\" formControlName=\"name\" autocomplete=\"off\">\n                  <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayShipper()\" (optionSelected)=\"onShipperSelectionChanged($event)\">\n                    <mat-option *ngFor=\"let option of filteredShippers | async\" [value]=\"option\">\n                      {{option.name}}\n                    </mat-option>\n                  </mat-autocomplete>\n                </ng-container>\n              </mat-form-field>\n              <mat-form-field>\n                <mat-label>Type</mat-label>\n                <mat-select formControlName=\"shipper_type_id\">\n                  <mat-option *ngFor=\"let option of shipper_types\" [value]=\"option.id\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input type=\"text\" matInput formControlName=\"phone\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input type=\"text\" matInput formControlName=\"address\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"email\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>EIN|Passport No</mat-label>\n                <input type=\"text\" matInput formControlName=\"ein\">\n              </mat-form-field>\n\n            </mat-card-content>\n          </mat-card>\n        </div>\n\n        <div formGroupName=\"receiver\">\n          <mat-card class=\"cs-card\">\n            <mat-card-header>\n              <mat-card-title>Receiver Information</mat-card-title>\n              <span>\n                <mat-slide-toggle formControlName=\"new\" (change)=\"newReceiverChange($event)\">Add New</mat-slide-toggle>\n              </span>\n            </mat-card-header>\n            <mat-card-content>\n              <mat-form-field>\n                <mat-label>Receiver Name</mat-label>\n                <ng-container *ngIf=\"dataForm.controls.receiver['controls'].new.value\">\n                  <input type=\"text\" matInput formControlName=\"name\" autocomplete=\"off\">\n                </ng-container>\n                <ng-container *ngIf=\"!dataForm.controls.receiver['controls'].new.value\">\n                  <input type=\"text\" matInput [matAutocomplete]=\"auto2\" formControlName=\"name\" autocomplete=\"off\">\n                  <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayReceiver()\" (optionSelected)=\"onReceiverSelectionChanged($event)\">\n                    <mat-option *ngFor=\"let option of filteredReceivers | async\" [value]=\"option\">\n                      {{option.name}}\n                    </mat-option>\n                  </mat-autocomplete>\n                </ng-container>\n\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input type=\"text\" matInput formControlName=\"phone\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input type=\"text\" matInput formControlName=\"address\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"email\">\n              </mat-form-field>\n\n            </mat-card-content>\n          </mat-card>\n        </div>\n      </div>\n\n      <div class=\"col\" formArrayName=\"packages\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Shipment Information</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div>\n              <div class=\"cs-plist\">\n                <div *ngFor=\"let package of dataForm.controls.packages['controls'];let i = index\" [formGroupName]=\"i\">\n\n                  <ng-container *ngIf=\"package.value.type == 1\">\n                    <mat-form-field>\n                      <mat-label>Year</mat-label>\n                      <input type=\"text\" matInput formControlName=\"year\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                      <mat-label>Model</mat-label>\n                      <input type=\"text\" matInput formControlName=\"model\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                      <mat-label>Make</mat-label>\n                      <input type=\"text\" matInput formControlName=\"mark\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                      <mat-label>Vin</mat-label>\n                      <input type=\"text\" matInput formControlName=\"vin\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                      <mat-label>Value</mat-label>\n\n                      <input type=\"text\" matInput formControlName=\"value\">\n                      <span matPrefix>$&nbsp;</span>\n                    </mat-form-field>\n\n                    <div class=\"fipt\">\n                      <button mat-raised-button color=\"warn\" (click)=\"deletePackage(i)\">Delete</button>\n                    </div>\n                    <!-- <div class=\"fipt\">\n                      <label for=\"file{{i}}\">File</label>\n                      <input id=\"file{{i}}\" type=\"file\" (change)=\"onPackageFileChange($event,i)\"/>\n                    </div> -->\n                  </ng-container>\n                  <ng-container *ngIf=\"package.value.type == 2\">\n                    <mat-form-field class=\"long_txt\">\n                      <mat-label>Description</mat-label>\n                      <input type=\"text\" matInput formControlName=\"description\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                      <mat-label>Value</mat-label>\n\n                      <input type=\"text\" matInput formControlName=\"value\">\n                      <span matPrefix>$&nbsp;</span>\n                    </mat-form-field>\n\n                    <div class=\"fipt\">\n                      <button mat-raised-button color=\"warn\" (click)=\"deletePackage(i)\">Delete</button>\n                    </div>\n                  </ng-container>\n                </div>\n              </div>\n              <div class=\"cs-button-holder\">\n                <button mat-raised-button color=\"warn\" [matMenuTriggerFor]=\"menu\">Add New</button>\n                <mat-menu #menu=\"matMenu\">\n                  <button mat-menu-item (click)=\"addPackage(1);\">Vehicles</button>\n                  <button mat-menu-item (click)=\"addPackage(2);\">Other Commodities</button>\n                </mat-menu>\n              </div>\n\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col\" *ngIf=\"shipmentHistory\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Shipment History</mat-card-title>\n            <button class=\"hdownload\" mat-button (click)=\"downloadShipmentGallery()\"><mat-icon>cloud_download</mat-icon></button>\n          </mat-card-header>\n          <mat-card-content>\n            <div>\n              <div class=\"ct_holder\">\n                <table class=\"gtable\">\n                  <thead>\n                    <th>Shipment Status</th>\n                    <th>Image</th>\n                    <th *ngIf=\"permission.show_user_column\">Added By</th>\n                    <th>Note</th>\n                    <th>Added Date</th>\n                    <th>Actions</th>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let item of shipmentHistory\">\n                      <td>{{ item.name}}</td>\n                      <!-- <td><button mat-button (click)=\"openImage(item.file)\" >{{ item.image_name}}</button></td> -->\n                      <td>\n\n                        <button mat-button *ngIf=\"!item.file\" disabled><mat-icon>image</mat-icon></button>\n                        <button mat-button (click)=\"openGallery(item)\" *ngIf=\"item.file\"><mat-icon>image</mat-icon></button>\n                      </td>\n                      <td *ngIf=\"permission.show_user_column\">{{ item.username}}</td>\n                      <td>{{ item.note}}</td>\n                      <td>{{ item.date_added}}</td>\n                      <td>\n                        <button mat-button (click)=\"openEditFiles(item)\" *ngIf=\"permission.control_history_gallery && item.file\"><mat-icon>edit</mat-icon></button>\n                        <button mat-button (click)=\"downloadGallery(item)\" *ngIf=\"item.file\"><mat-icon>cloud_download</mat-icon></button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n    <div>\n      <div class=\"col\" formGroupName=\"other\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Other Information</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-form-field>\n              <input matInput [matDatepickerFilter]=\"dateFilter.bind(this)\" [matDatepicker]=\"pickpicker\" formControlName=\"date\" placeholder=\"Date\">\n              <mat-datepicker-toggle matSuffix [for]=\"pickpicker\"></mat-datepicker-toggle>\n              <mat-datepicker #pickpicker></mat-datepicker>\n           </mat-form-field>\n            <mat-form-field>\n              <mat-label>Cargo Type</mat-label>\n              <mat-select formControlName=\"container_type_id\">\n                <mat-option *ngFor=\"let option of container_types\" [value]=\"option.id\">\n                  {{option.name}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field >\n            <mat-form-field >\n              <mat-label>Title</mat-label>\n              <mat-select formControlName=\"title\" [attr.disabled]=\"!permission.title\">\n                <mat-option [value]=\"0\"> No </mat-option>\n                <mat-option [value]=\"1\"> Yes </mat-option>\n                <mat-option [value]=\"2\"> N/A </mat-option>\n\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Key</mat-label>\n              <mat-select formControlName=\"akey\" [attr.disabled]=\"!permission.key\">\n                <mat-option [value]=\"0\"> No </mat-option>\n                <mat-option [value]=\"1\"> Yes </mat-option>\n                <mat-option [value]=\"2\"> N/A </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n              <span class=\"frtoggle\">\n                <mat-slide-toggle formControlName=\"new_destination\" (change)=\"newDestinationChange($event)\">Add New</mat-slide-toggle>\n              </span>\n              <mat-label>Destination</mat-label>\n              <ng-container *ngIf=\"dataForm.controls.other['controls'].new_destination.value\">\n                <input type=\"text\" matInput formControlName=\"destination_name\">\n              </ng-container>\n              <ng-container *ngIf=\"!dataForm.controls.other['controls'].new_destination.value\">\n                <input type=\"text\" matInput formControlName=\"destination_name\" [matAutocomplete]=\"auto3\">\n                <mat-autocomplete #auto3=\"matAutocomplete\" [displayWith]=\"displayDestination()\" (optionSelected)=\"onDestinationSelectionChanged($event)\">\n                  <mat-option *ngFor=\"let option of filteredDestinations | async\" [value]=\"option\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-autocomplete>\n              </ng-container>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Warehouse</mat-label>\n              <mat-select formControlName=\"warehouse_id\">\n                <mat-option *ngFor=\"let option of warehouses_list\" [value]=\"option.id\">\n                  {{option.name}}\n                </mat-option>\n                <mat-option [value]=\"0\">None</mat-option>\n              </mat-select>\n\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-label>Your Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col\" *ngIf=\"!shipmentId && isAdmin\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Assign To User</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-form-field>\n              <mat-label>Select User</mat-label>\n              <input type=\"text\" matInput [formControl]=\"userNameCtrl\" [matAutocomplete]=\"auto_user\">\n              <mat-autocomplete #auto_user=\"matAutocomplete\" [displayWith]=\"displayUsers\" (optionSelected)=\"onUserSelectionChanged($event)\">\n                <mat-option *ngFor=\"let option of filterUsers | async\" [value]=\"option\">\n                  {{option.firstname}} {{option.lastname}}\n                </mat-option>\n              </mat-autocomplete>\n\n            </mat-form-field>\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col\" *ngIf=\"!shipmentId\" [ngClass]=\"{'error_box' : !dataForm.controls.other['controls'].attach_file.value}\">\n        <mat-card class=\"cs-card\">\n          <mat-card-header>\n            <mat-card-title>Attach File <span class=\"error_title\" *ngIf=\"!dataForm.controls.other['controls'].attach_file.value\">(Required)</span><span class=\"success_title\" *ngIf=\"dataForm.controls.other['controls'].attach_file.value\">(Attached)</span></mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"fupload\">\n              <label for=\"ifile2\">Attach File</label>\n              <input type=\"file\" id=\"ifile2\" (change)=\"onAttachFileChange($event)\" accept=\".png, .jpg, .jpeg,.txt, .pdf,.doc,.docx,.zip\">\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n      <div class=\"col hprint\">\n        <mat-card class=\"cs-card\" formArrayName=\"history\">\n          <mat-card-header>\n            <mat-card-title>History</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n\n            <mat-form-field>\n              <mat-label>Status</mat-label>\n              <mat-select formControlName=\"shipment_status_id\" [attr.disabled]=\"!shipmentId\">\n                <mat-option *ngFor=\"let option of shippment_statuses\" [value]=\"option.id\">\n                  {{option.name}}\n                </mat-option>\n              </mat-select>\n\n            </mat-form-field>\n\n\n\n            <mat-form-field>\n              <mat-label>Note</mat-label>\n              <textarea matInput formControlName=\"note\"></textarea>\n            </mat-form-field>\n\n            <div class=\"fupload\">\n              <label for=\"ifile\">Attach Image</label>\n              <input type=\"file\" id=\"ifile\" multiple (change)=\"onFileChange($event)\" accept=\".png, .jpg, .jpeg\">\n            </div>\n\n          </mat-card-content>\n        </mat-card>\n        <div class=\"form-add\">\n          <mat-progress-spinner *ngIf=\"submitted\"\n              class=\"loader_spinner\"\n              color=\"primary\"\n              mode=\"determinate\"\n              [value]=\"this.percentCompleted\">\n          </mat-progress-spinner>\n\n          <!-- <button mat-raised-button color=\"warn\" disabled *ngIf=\"submitted\">\n            <span >Wait</span>\n          </button> -->\n          <ng-container *ngIf=\"!shipmentId && isAdmin;else normalButton\">\n            <button mat-raised-button color=\"warn\" (click)=\"submitForm()\" [disabled]=\"!dataForm.valid || !userNameCtrl.value\" *ngIf=\"!submitted\">\n              <span *ngIf=\"!editMode\">Submit</span>\n              <span *ngIf=\"editMode\">Update</span>\n            </button>\n          </ng-container>\n          <ng-template #normalButton>\n            <button mat-raised-button color=\"warn\" (click)=\"submitForm()\" [disabled]=\"!dataForm.valid\" *ngIf=\"!submitted\">\n              <span *ngIf=\"!editMode\">Submit</span>\n              <span *ngIf=\"editMode\">Update</span>\n            </button>\n          </ng-template>\n\n        </div>\n        <!-- {{percentCompleted}} -\n        {{isUploaded}} -->\n\n\n      </div>\n\n    </div>\n  </div>\n\n</form>\n\n<ng-template #itemTemplate let-index=\"index\" let-type=\"type\" let-data=\"data\" let-currIndex=\"currIndex\">\n\t<ng-container *ngIf=\"type === 'imageViewer' && index === currIndex\">\n    <ngx-imageviewer [src]=\"data.src\"></ngx-imageviewer>\n  </ng-container>\n</ng-template>\n"],"sourceRoot":"webpack:///"}